//video: http://screencast.com/t/GCiCUW7JhbsS

#include <stdint.h>
#include <stdbool.h>
#include "utils/ustdlib.h"
#include "inc/hw_types.h"
#include "inc/hw_memmap.h"
#include "driverlib/sysctl.h"
#include "driverlib/pin_map.h"
#include "driverlib/debug.h"
#include "driverlib/hibernate.h"
#include "driverlib/gpio.h"

int main(void)
{
	SysCtlClockSet(SYSCTL_SYSDIV_5|SYSCTL_USE_PLL|SYSCTL_XTAL_16MHZ|SYSCTL_OSC_MAIN); //set clock to 40 MHz

	SysCtlPeripheralEnable(SYSCTL_PERIPH_GPIOF);					//enable port F
	GPIOPinTypeGPIOOutput(GPIO_PORTF_BASE, GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3);	//set pins PF1, PF2, PF3 as outputs
	GPIOPinWrite(GPIO_PORTF_BASE,GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3, 0x08);		//turn on pin PF3 to indicate awake status

	SysCtlPeripheralEnable(SYSCTL_PERIPH_HIBERNATE);	//enable hibernation peripheral
	HibernateEnableExpClk(SysCtlClockGet());			//supply hibernation module with current system clock
	HibernateGPIORetentionEnable();						//retain GPIO states and remain active when waking
	SysCtlDelay(64000000);								//delay 4 seconds to observe the LED
	HibernateRTCSet(0);									//Set real time clock to 0
	HibernateRTCEnable();								//Enable real time clock hibernation
	HibernateRTCMatchSet(0,5);							//Set RTC wake condition
	HibernateWakeSet(HIBERNATE_WAKE_PIN | HIBERNATE_WAKE_RTC);	//wake with pin or with RTC
	GPIOPinWrite(GPIO_PORTF_BASE,GPIO_PIN_3, 0x00);		//turn off pin PF3 to indicate hibernation status

	HibernateRequest();		//begin hibernation
	
	while(1)
	{
	}
}
